C51 COMPILER V9.52.0.0   E2PROM                                                            01/12/2018 21:42:29 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE E2PROM
OBJECT MODULE PLACED IN E2PROM.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE E2PROM.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "E2PROM.h"
   2          
   3          /*
   4          * E2PROM 空闲模式，关闭各项功能
   5          */
   6          void IapIdle()
   7          {
   8   1          IAP_CONTR = 0;          //关闭 IAP 功能
   9   1          IAP_CMD = CMD_IDLE;     //清除命令寄存器
  10   1          IAP_TRIG = 0;           //清除触发寄存器
  11   1          IAP_ADDRH = 0x80;       //将地址设置到非 IAP 区域
  12   1          IAP_ADDRL = 0;
  13   1      }
  14          /*
  15          * E2PROM 读字符
  16          * WORD addrOrigin:起始地址
  17          * 返回读到的字符
  18          */
  19          BYTE IapReadByte(WORD addr)
  20          {
  21   1          BYTE dat;
  22   1          IAP_CONTR = WT_24M;    //使能 IAP
  23   1          IAP_CMD = CMD_READ;    //设置 IAP 读命令
  24   1          IAP_ADDRL = addr;      //设置 IAP 低地址
  25   1          IAP_ADDRH = addr >> 8; //设置 IAP 高地址
  26   1          IAP_TRIG = 0x5a;       //写触发命令(0x5a)
  27   1          IAP_TRIG = 0xa5;       //写触发命令(0xa5)
  28   1          _nop_();
  29   1          dat = IAP_DATA;        //读 IAP 数据
  30   1          IapIdle();             //关闭 IAP 功能
  31   1          return dat;
  32   1      }
  33          /*
  34          * E2PROM 读字符串
  35          * WORD addrOrigin:起始地址
  36          * BYTE* ReadMsg：读到的数据
  37          */
  38          void IapReadFlash(WORD addrOrigin,int Length,BYTE* ReadMsg)
  39          {
  40   1          int i;
  41   1              
  42   1          for(i = 0;i < Length;i++)
  43   1          {
  44   2              *ReadMsg++ = IapReadByte(addrOrigin + i);
  45   2              Delaymus(7); 
  46   2          }
  47   1              ReadMsg = ReadMsg - Length;
  48   1      }
  49          /*
  50          * E2PROM 写字符串
  51          * WORD addr：起始地址
  52          * BYTE dat：要写入的字符
  53          */
  54          void IapProgramByte(WORD addr, BYTE dat)
  55          {
C51 COMPILER V9.52.0.0   E2PROM                                                            01/12/2018 21:42:29 PAGE 2   

  56   1          IAP_CONTR = WT_24M;    //使能 IAP
  57   1          IAP_CMD = CMD_PROGRAM;           //设置 IAP 写命令
  58   1          IAP_ADDRL = addr;      //设置 IAP 低地址
  59   1          IAP_ADDRH = addr >> 8; //设置 IAP 高地址
  60   1          IAP_DATA = dat;        //写 IAP 数据
  61   1          IAP_TRIG = 0x5a;       //写触发命令(0x5a)
  62   1          IAP_TRIG = 0xa5;       //写触发命令(0xa5)
  63   1          _nop_();
  64   1          IapIdle(); //关闭 IAP 功能
  65   1      }
  66          /*
  67          * E2PROM 写字符串
  68          * WORD addrOrigin:起始地址
  69          * BYTE* Msg：需要写入的数据
  70          * 返回：长度写入的字符串长度
  71          */
  72          int IapProgramFlash(WORD addrOrigin,BYTE* Msg)
  73          {
  74   1          int Length,i;
  75   1          Length = strlen(Msg);
  76   1          
  77   1          for(i = 0;i < Length;i ++)
  78   1          {
  79   2              IapProgramByte(addrOrigin +i ,*Msg ++);
  80   2              Delaymus(7); 
  81   2          }
  82   1          return Length;
  83   1      }
  84          /*
  85          *  E2PROM 擦除
  86          */
  87          void IapEraseSector(WORD addr)
  88          {
  89   1          IAP_CONTR = WT_24M;    //使能 IAP
  90   1          IAP_CMD = CMD_ERASE;   //设置 IAP 擦除命令
  91   1          IAP_ADDRL = addr;      //设置 IAP 低地址
  92   1          IAP_ADDRH = addr >> 8; //设置 IAP 高地址
  93   1          IAP_TRIG = 0x5a;       //写触发命令(0x5a)
  94   1          IAP_TRIG = 0xa5;       //写触发命令(0xa5)
  95   1          _nop_();               //
  96   1          IapIdle();             //关闭 IAP 功能
  97   1      }
  98          void Delaymus(unsigned char m)
  99          {
 100   1          int i;
 101   1          for(i = m;i <= 0;i --)
 102   1              Delay1us();     
 103   1      }
 104          void Delay1us()         //@24.000MHz
 105          {
 106   1              unsigned char i;
 107   1              i = 6;
 108   1              while (--i);
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    391    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.52.0.0   E2PROM                                                            01/12/2018 21:42:29 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
