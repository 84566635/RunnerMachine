C51 COMPILER V9.52.0.0   UART                                                              02/06/2018 19:47:45 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE uart.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "uart.h"
   2          
   3          #define GymInfoSize 100 //跑步机信息缓存区的大小
   4          
   5          bit busy1, busy2, busy3, busy4; //串口发送标志
   6          uchar xdata _16_2_str[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F
             -'};
   7          
   8          //15个字节的UID缓存区，其中卡类型：6byte+7byte；卡号为：11byte + 10byte + 9byte + 8byte
   9          uchar xdata UID_buffer[15] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
             -, 0x00, 0x00};
  10          /**Card_Info[10]卡信息保存
  11           * aa 55：帧头
  12           * 66：发送卡信息的命令
  13           * card type：4byte + 5byte
  14           * card UID：6byte + 7byte + 8byte + 9byte
  15           * ff：为帧尾
  16           */
  17          extern uchar xdata Card_Info[10] = {0xaa, 0x55, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff};
  18          extern uchar UID_Index = 0;
  19          extern bit UID_Receive_Flag = 0; //完整卡信息读取完成标志
  20          extern uchar TimeReadUID;
  21          /**GymInfoBuff[20]跑步机运行状态缓存区
  22           * 帧头(aa + 55) + 01/02/03/04 + 状态信息
  23           */
  24          uchar xdata GymInfoBuff[GymInfoSize] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  25          extern uchar MileageInfo[2] = {0x00, 0x00};
  26          extern uchar TimeGymInfo;
  27          extern uchar GymInfoIndex = 0; //里程保存指针
  28          extern bit Mileage_Finsh = 0;
  29          /************************************************/
  30          
  31          /**串口发送字符  
  32           * dat：待发送的字符
  33           * Uart_Port：需要使用的串口号
  34           */
  35          void SendData(unsigned char Uart_Port, unsigned char dat)
  36          {
  37   1          switch (Uart_Port)
  38   1          {
  39   2          case 1:
  40   2              while (busy1)
  41   2                  ;
  42   2              busy1 = 1;
  43   2              SBUF = dat;
  44   2              break;
  45   2          case 2:
  46   2              while (busy2)
  47   2                  ;
  48   2              busy2 = 1;
  49   2              S2BUF = dat;
  50   2              break;
  51   2          case 3:
  52   2              while (busy3)
  53   2                  ;
C51 COMPILER V9.52.0.0   UART                                                              02/06/2018 19:47:45 PAGE 2   

  54   2              busy3 = 1;
  55   2              S3BUF = dat;
  56   2              break;
  57   2          case 4:
  58   2              while (busy4)
  59   2                  ;
  60   2              busy4 = 1;
  61   2              S4BUF = dat;
  62   2              break;
  63   2          default:
  64   2              break;
  65   2          }
  66   1      }
  67          
  68          /**串口发送字符串
  69           * Uart_Port：需要使用的串口号
  70           * s：待发送的字符串
  71           */
  72          void SendString(unsigned char Uart_Port, char *s)
  73          {
  74   1          while (*s)
  75   1          {
  76   2              SendData(Uart_Port, *s++);
  77   2          }
  78   1      }
  79          void SendArrayHex(unsigned char Uart_Port, char *s, uint n)
  80          {
  81   1          while (n--)
  82   1          {
  83   2              SendData(Uart_Port, *s++);
  84   2          }
  85   1      }
  86          /********************Initialization********************************/
  87          void Init_Uart()
  88          {
  89   1          Init_UART1();
  90   1          Init_UART2();
  91   1          Init_UART3();
  92   1          Init_UART4();
  93   1      
  94   1          EA = 1;
  95   1      }
  96          void Init_UART1()
  97          {
  98   1          SCON = 0x50;
  99   1          TL1 = (65536 - (FOSC / 4 / BAUD1));
 100   1          TH1 = (65536 - (FOSC / 4 / BAUD1)) >> 8;
 101   1          AUXR |= 0X40; //
 102   1          AUXR = 0x40;  //定时器1为1T模式
 103   1          TMOD = 0x00;  //定时器1为模式0(16位自动重载)
 104   1          TR1 = 1;
 105   1          ES = 1; //使能串口1中断
 106   1      
 107   1          busy1 = 0;
 108   1      }
 109          
 110          void Init_UART2()
 111          {
 112   1          S2CON = 0x50;
 113   1          T2L = (65536 - (FOSC / 4 / BAUD2));
 114   1          T2H = (65536 - (FOSC / 4 / BAUD2)) >> 8;
 115   1          AUXR |= 0X14; //T2为1T模式，并启动定时器2
C51 COMPILER V9.52.0.0   UART                                                              02/06/2018 19:47:45 PAGE 3   

 116   1          IE2 |= 0x01;  //使能串口2中断
 117   1          busy2 = 0;
 118   1      }
 119          
 120          void Init_UART3()
 121          {
 122   1          S3CON = 0x50;
 123   1          T3L = (65536 - (FOSC / 4 / BAUD3));
 124   1          T3H = (65536 - (FOSC / 4 / BAUD3)) >> 8;
 125   1          T4T3M |= 0x0a;
 126   1          IE2 |= 0x08; //使能串口3中断
 127   1          busy3 = 0;
 128   1      }
 129          
 130          void Init_UART4()
 131          {
 132   1          S4CON = 0x50;
 133   1          T4L = (65536 - (FOSC / 4 / BAUD4));
 134   1          T4H = (65536 - (FOSC / 4 / BAUD4)) >> 8;
 135   1          T4T3M |= 0xa0;
 136   1          IE2 |= 0x10; //使能串口4中断
 137   1          busy4 = 0;
 138   1      }
 139          
 140          /**************UART_Interrupt_Fuctions****************************/
 141          void UART1_Isr() interrupt 4 using 1
 142          {
 143   1          if (TI)
 144   1          {
 145   2              TI = 0;    //清中断标志
 146   2              busy1 = 0; //清忙标志
 147   2          }
 148   1          if (RI)
 149   1          {
 150   2              RI = 0;
 151   2          }
 152   1      }
 153          
 154          void UART2_Isr() interrupt 8
 155          {
 156   1          if (S2CON & 0x02)
 157   1          {
 158   2              S2CON &= ~0x02; //清中断标志
 159   2              busy2 = 0;      //清忙标志
 160   2          }
 161   1          if (S2CON & 0x01)
 162   1          {
 163   2              S2CON &= ~0x01; //清中断标志
 164   2          }
 165   1      }
 166          
 167          void Uart3Isr() interrupt 17
 168          {
 169   1          uchar buffer = 0;
 170   1          if (S3CON & 0x02)
 171   1          {
 172   2              S3CON &= ~0x02;
 173   2              busy3 = 0;
 174   2          }
 175   1          if (S3CON & 0x01)
 176   1          {
 177   2              S3CON &= ~0x01;
C51 COMPILER V9.52.0.0   UART                                                              02/06/2018 19:47:45 PAGE 4   

 178   2      
 179   2              buffer = S3BUF;
 180   2              TimeReadUID = 0;
 181   2              Read_Card_UID(UID_buffer, Card_Info, buffer);
 182   2          }
 183   1      }
 184          
 185          void UART4_Isr() interrupt 18
 186          {
 187   1          uchar Buffer = 0;
 188   1          if (S4CON & 0x02)
 189   1          {
 190   2              S4CON &= ~0x02; //清中断标志
 191   2              busy4 = 0;      //清忙标志
 192   2          }
 193   1          if (S4CON & 0x01)
 194   1          {
 195   2              S4CON &= ~0x01; //清中断标志
 196   2      
 197   2              Buffer = S4BUF;
 198   2                      
 199   2                      S2BUF = Buffer;//直接透传给WIFI模块（串口2）
 200   2                      //SBUF = Buffer;//直接透传给WIFI模块（串口2）
 201   2      
 202   2              TimeGymInfo = 0;
 203   2              GetMileage(GymInfoBuff, MileageInfo, Buffer);
 204   2      
 205   2              //S4BUF = Buffer;
 206   2      
 207   2              
 208   2          }
 209   1      }
 210          /**读取卡信息
 211           * UID_buffer：UID_buffer 缓存区
 212           * Card_Info：卡信息存储区
 213           * Msg：一个字节输入
 214           */
 215          void Read_Card_UID(uchar *UID_buffer, uchar *Card_Info, uchar Msg)
 216          {
 217   1          uchar i = 0;
 218   1          UID_buffer[UID_Index++] = Msg;
 219   1          if (UID_Index == 15)
 220   1          {
 221   2              UID_Index = 0;
 222   2              for (i = 0; i < 2; i++)
 223   2              {
 224   3                  Card_Info[3 + i] = UID_buffer[5 + i];
 225   3              }
 226   2              for (i = 0; i < 4; i++)
 227   2              {
 228   3                  Card_Info[5 + i] = UID_buffer[10 - i];
 229   3              }
 230   2              UID_Receive_Flag = 1;
 231   2              memset(UID_buffer, 0x00, 15);
 232   2          }
 233   1          else if (UID_Index == 12)
 234   1          {
 235   2              UID_Index = 0;
 236   2              for (i = 0; i < 2; i++)
 237   2              {
 238   3                  Card_Info[3 + i] = UID_buffer[5 + i];
 239   3              }
C51 COMPILER V9.52.0.0   UART                                                              02/06/2018 19:47:45 PAGE 5   

 240   2              for (i = 0; i < 4; i++)
 241   2              {
 242   3                  Card_Info[5 + i] = UID_buffer[10 - i];
 243   3              }
 244   2              UID_Receive_Flag = 1;
 245   2              memset(UID_buffer, 0x00, 12);
 246   2          }
 247   1          else
 248   1          {
 249   2          }
 250   1      }
 251          /**数据包解析
 252           * Input:
 253           *      GymInfoBuff[]：接收到的数据缓存
 254           *      MileageInfo[]：准备保存的里程
 255           *      Data_Length：检测的数据包的最小长度
 256           * Return:1：取到了里程数据；0：未取到里程数据
 257           */
 258          void GetMileage(unsigned char *GymInfoBuff, unsigned char *MileageInfo, uchar Msg)
 259          {
 260   1          uchar i = 0;
 261   1          uchar MileageIndex = 0;
 262   1          GymInfoBuff[GymInfoIndex++] = Msg;
 263   1          if (GymInfoIndex == GymInfoSize)
 264   1          {
 265   2              GymInfoIndex = 0;
 266   2              for (i = 0; i < GymInfoSize; i++)
 267   2              {
 268   3                  if ((GymInfoBuff[i + 0] == 0xaa) && (GymInfoBuff[i + 1] == 0x55) && (GymInfoBuff[i + 2] == 0x0
             -3)) //如果是 aa 55 03,则是符合要求的信息，取到里程信息
 269   3                  {
 270   4      
 271   4                      MileageIndex = i + 5;
 272   4                      MileageInfo[0] = GymInfoBuff[MileageIndex];
 273   4                      MileageInfo[1] = GymInfoBuff[MileageIndex + 1];
 274   4                      Mileage_Finsh = 1;
 275   4                      break;
 276   4                  }
 277   3                  else
 278   3                  {
 279   4                      continue;
 280   4                  }
 281   3              }
 282   2              memset(GymInfoBuff, 0x00, GymInfoSize);
 283   2          }
 284   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    873    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    141    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
