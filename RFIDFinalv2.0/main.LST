C51 COMPILER V9.52.0.0   MAIN                                                              03/26/2018 14:07:42 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "main.h"
   2          #include "uart.h"
   3          #include <fun.h>
   4          #include <timer.h>
   5          
   6          extern uint xdata TimeIndex;
   7          extern uchar xdata Card_Info[10];
   8          
   9          /**CorrectCardInfo[20]卡信息保存
  10           * aa 55：帧头:[0:1]--2byte
  11           * 06：[2]--1byte:发送卡信息的命令
  12           * card type：[3:4]--2byte
  13           * card UID：[5:8]--4byte
  14           * cc cc：[9:10]--2byte作为 card UID 和 mechine ID 的分隔符
  15           * mechine ID：[11:17]--7byte
  16           * ff ff：[18:19]--2byte为帧尾
  17           */
  18          uchar CorrectCardInfo[20] = {0xaa, 0x55, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0x00, 0x00,
             - 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff};
  19          extern bit UID_Receive_Flag;
  20          //存放mechine ID 数组，共计7个字节
  21          uchar xdata mechine_ID[7] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  22          
  23          extern uchar MileageInfo[2];
  24          extern bit Mileage_Finsh;
  25          extern uchar xdata GymInfoBuff[100];
  26          uchar Mileage[2] = {0, 0};
  27          uint FullMileage[2] = {0, 0};
  28          uchar GymInfoCom_10s_Index = 0;
  29          extern uint GymInfoCom_10s;
  30          //**********************************************************************
  31          void main()
  32          {
  33   1          uchar i = 0, k = 0;
  34   1          uchar temp = 0;
  35   1          uchar UID_Temp[4] = {0x00, 0x00, 0x00, 0x00};
  36   1      
  37   1          Init_Uart();
  38   1          InitTimer0();
  39   1      
  40   1              //get the mechine ID and save it in mechine_ID
  41   1          ReadMechineID(mechine_ID, ID_Addr_ROM);
  42   1              delay1(200);
  43   1              for(i = 0;i < 7; i++)
  44   1              {
  45   2                      CorrectCardInfo[11 + i] = mechine_ID[i];
  46   2              }    
  47   1          
  48   1              while (1)
  49   1      
  50   1          {
  51   2              if (UID_Receive_Flag)                                   //new Card Flash
  52   2              {
  53   3                  for (i = 0; i <= 3; i++)
  54   3                  {
C51 COMPILER V9.52.0.0   MAIN                                                              03/26/2018 14:07:42 PAGE 2   

  55   4                      UID_Temp[i] = Card_Info[5 + i];
  56   4                  }
  57   3                  if (FindUID(UID_Temp))                              //There is a same Card in the List
  58   3                  {
  59   4      
  60   4                      Relay_Start = 0;                                //跑步机继电器闭合，正常工作
  61   4                      GymInfoCom_10s = 0;
  62   4                      for(k = 0; k < 10; k++)
  63   4                      {
  64   5                          CorrectCardInfo[k] = Card_Info[k];
  65   5                      }
  66   4      
  67   4                      SendArrayHex(2, Card_Info, 10); //发送卡信息
  68   4      
  69   4                      ArrayReset(Card_Info, 0, 3, 6); //清除缓存区，以备下一次读卡做准备
  70   4                  }
  71   3                  else
  72   3                  {
  73   4                      LED_GREEN = 0;
  74   4                      delay1(2000);
  75   4                      LED_GREEN = 1;
  76   4                  }
  77   3                  UID_Receive_Flag = 0;
  78   3              }
  79   2      
  80   2              if (Mileage_Finsh)                                              //里程读取是否结束？
  81   2              {
  82   3      
  83   3                  Mileage[1] = MileageInfo[1];                //计算里程
  84   3                  if (Mileage[0] != Mileage[1])
  85   3                  {
  86   4                      Relay_Start = 0;
  87   4                      GymInfoCom_10s = 0;
  88   4                  }
  89   3                  Mileage[0] = Mileage[1];
  90   3      
  91   3                  FullMileage[1] = (MileageInfo[0] << 8) + MileageInfo[1];
  92   3                  if(FullMileage[0] != FullMileage[1])
  93   3                  {
  94   4                      Relay_Start = 0;
  95   4                      GymInfoCom_10s = 0;
  96   4                  }
  97   3                  FullMileage[0] = FullMileage[1];
  98   3      
  99   3                  memset(MileageInfo, 0x00, 2);                       //清除里程信息
 100   3      
 101   3                  SendArrayHex(2, GymInfoBuff, 100);          //发送跑步机状态信息
 102   3                  SendArrayHex(2, CorrectCardInfo, 20);       //发送卡信息
 103   3      
 104   3                  memset(GymInfoBuff, 0x00, 100);                     //清除跑步机状态信息
 105   3                  Mileage_Finsh = 0;                                          //100字节标志位清零
 106   3              }
 107   2          }
 108   1      }
 109          
 110          /**清除数组中指定区域，
 111           * Array：待清除的数组
 112           * Ch：清除区域准备填充的数据
 113           * Head：待清除的起始地址
 114           * Length：待清除的数据长度
 115           */
 116          
C51 COMPILER V9.52.0.0   MAIN                                                              03/26/2018 14:07:42 PAGE 3   

 117          void ArrayReset(unsigned char *Array, unsigned char Ch, char Head, char Length)
 118          {
 119   1          char i = 0;
 120   1          for (i = Head; i <= Length; i++)
 121   1          {
 122   2              Array[i] = Ch;
 123   2          }
 124   1      }
 125          /**读取单片机的全球唯一的ID号码
 126           * Array：存放ID的数组
 127           * uchar code *Addr：采用ROM的读取方法
 128           */
 129          void ReadMechineID(unsigned char *Array, uchar code *Addr)
 130          {
 131   1          uchar i = 0;
 132   1          for (i = 0; i < 7; i++)
 133   1          {
 134   2              Array[i] = *Addr++;
 135   2          }
 136   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    435    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
