C51 COMPILER V9.52.0.0   UART                                                              03/26/2018 12:08:46 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE uart.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "uart.h"
   2          
   3          #define GymInfoSize 100 //跑步机信息缓存区的大小
   4          
   5          bit busy1, busy2, busy3, busy4; //串口发送标志
   6          /************************************************/
   7          
   8          /**串口发送字符  
   9           * dat：待发送的字符
  10           * Uart_Port：需要使用的串口号
  11           */
  12          void SendData(unsigned char Uart_Port, unsigned char dat)
  13          {
  14   1          switch (Uart_Port)
  15   1          {
  16   2          case 1:
  17   2              while (busy1)
  18   2                  ;
  19   2              busy1 = 1;
  20   2              SBUF = dat;
  21   2              break;
  22   2          case 2:
  23   2              while (busy2)
  24   2                  ;
  25   2              busy2 = 1;
  26   2              S2BUF = dat;
  27   2              break;
  28   2          case 3:
  29   2              while (busy3)
  30   2                  ;
  31   2              busy3 = 1;
  32   2              S3BUF = dat;
  33   2              break;
  34   2          case 4:
  35   2              while (busy4)
  36   2                  ;
  37   2              busy4 = 1;
  38   2              S4BUF = dat;
  39   2              break;
  40   2          default:
  41   2              break;
  42   2          }
  43   1      }
  44          
  45          /**串口发送字符串
  46           * Uart_Port：需要使用的串口号
  47           * s：待发送的字符串
  48           */
  49          void SendString(unsigned char Uart_Port, char *s)
  50          {
  51   1          while (*s)
  52   1          {
  53   2              SendData(Uart_Port, *s++);
  54   2          }
  55   1      }
C51 COMPILER V9.52.0.0   UART                                                              03/26/2018 12:08:46 PAGE 2   

  56          void SendArrayHex(unsigned char Uart_Port, char *s, uint n)
  57          {
  58   1          while (n--)
  59   1          {
  60   2              SendData(Uart_Port, *s++);
  61   2          }
  62   1      }
  63          /********************Initialization********************************/
  64          void Init_Uart()
  65          {
  66   1          Init_UART1();
  67   1          Init_UART2();
  68   1          Init_UART3();
  69   1          Init_UART4();
  70   1      
  71   1          EA = 1;
  72   1      }
  73          void Init_UART1()
  74          {
  75   1          SCON = 0x50;
  76   1          TL1 = (65536 - (FOSC / 4 / BAUD1));
  77   1          TH1 = (65536 - (FOSC / 4 / BAUD1)) >> 8;
  78   1          AUXR |= 0X40; //
  79   1          AUXR = 0x40;  //定时器1为1T模式
  80   1          TMOD = 0x00;  //定时器1为模式0(16位自动重载)
  81   1          TR1 = 1;
  82   1          ES = 1; //使能串口1中断
  83   1      
  84   1          busy1 = 0;
  85   1      }
  86          
  87          void Init_UART2()
  88          {
  89   1          S2CON = 0x50;
  90   1          T2L = (65536 - (FOSC / 4 / BAUD2));
  91   1          T2H = (65536 - (FOSC / 4 / BAUD2)) >> 8;
  92   1          AUXR |= 0X14; //T2为1T模式，并启动定时器2
  93   1          IE2 |= 0x01;  //使能串口2中断
  94   1          busy2 = 0;
  95   1      }
  96          
  97          void Init_UART3()
  98          {
  99   1          S3CON = 0x50;
 100   1          T3L = (65536 - (FOSC / 4 / BAUD3));
 101   1          T3H = (65536 - (FOSC / 4 / BAUD3)) >> 8;
 102   1          T4T3M |= 0x0a;
 103   1          IE2 |= 0x08; //使能串口3中断
 104   1          busy3 = 0;
 105   1      }
 106          
 107          void Init_UART4()
 108          {
 109   1          S4CON = 0x50;
 110   1          T4L = (65536 - (FOSC / 4 / BAUD4));
 111   1          T4H = (65536 - (FOSC / 4 / BAUD4)) >> 8;
 112   1          T4T3M |= 0xa0;
 113   1          IE2 |= 0x10; //使能串口4中断
 114   1          busy4 = 0;
 115   1      }
 116          
 117          /**************UART_Interrupt_Fuctions****************************/
C51 COMPILER V9.52.0.0   UART                                                              03/26/2018 12:08:46 PAGE 3   

 118          void UART1_Isr() interrupt 4 using 1
 119          {
 120   1          if (TI)
 121   1          {
 122   2              TI = 0;    //清中断标志
 123   2              busy1 = 0; //清忙标志
 124   2          }
 125   1          if (RI)
 126   1          {
 127   2              RI = 0;
 128   2          }
 129   1      }
 130          
 131          void UART2_Isr() interrupt 8
 132          {
 133   1          if (S2CON & 0x02)
 134   1          {
 135   2              S2CON &= ~0x02; //清中断标志
 136   2              busy2 = 0;      //清忙标志
 137   2          }
 138   1          if (S2CON & 0x01)
 139   1          {
 140   2              S2CON &= ~0x01; //清中断标志
 141   2          }
 142   1      }
 143          
 144          void Uart3Isr() interrupt 17
 145          {
 146   1          uchar buffer = 0;
 147   1          if (S3CON & 0x02)
 148   1          {
 149   2              S3CON &= ~0x02;
 150   2              busy3 = 0;
 151   2          }
 152   1          if (S3CON & 0x01)
 153   1          {
 154   2              S3CON &= ~0x01;
 155   2      
 156   2              buffer = S3BUF;
 157   2          }
 158   1      }
 159          
 160          void UART4_Isr() interrupt 18
 161          {
 162   1          uchar Buffer = 0;
 163   1          if (S4CON & 0x02)
 164   1          {
 165   2              S4CON &= ~0x02; //清中断标志
 166   2              busy4 = 0;      //清忙标志
 167   2          }
 168   1          if (S4CON & 0x01)
 169   1          {
 170   2              S4CON &= ~0x01; //清中断标志
 171   2      
 172   2              Buffer = S4BUF;
 173   2                      
 174   2                      S2BUF = Buffer;//直接透传给WIFI模块（串口2）
 175   2                      
 176   2      
 177   2              //S4BUF = Buffer;
 178   2              
 179   2          }
C51 COMPILER V9.52.0.0   UART                                                              03/26/2018 12:08:46 PAGE 4   

 180   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    333    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
